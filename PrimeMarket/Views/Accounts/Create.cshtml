@model PrimeMarket.Models.Commodity
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/LayoutAdmin.cshtml";
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryui")
@*@Styles.Render("~/Content/themes/base/css", "~/Content/css")*@
<h2>تسجيل</h2>
<script type="text/javascript">
    function fileCheck(obj) {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
        }
    };

    //$(document).ready(function () {
    //    $('.datetimepicker').datetimepicker({
    //        format: 'lll'
    //    });
    //});
</script>
@section scripts{

    <script>

       $("#CreationDate").datepicker();
       $("#ExpireDate").datepicker();
         clear();
    </script>
}
@using (Html.BeginForm("Create", "Commodities", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>سلعة جديدة</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.CategoryId, "المنتج الرئيسى", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                @Html.DropDownList("CategoriesList", null, htmlAttributes: new { @class = "form-control" })


            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.SubCategoryId, "المنتج الفرعى", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SubCategoryId, new SelectList(""), "اختر المنتج الفرعى",new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Title, "اسم السلعة", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Details, " تفاصيل السلعة", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Details, new { htmlAttributes = new { @class = "form-control"}, @style="width:100%", @rows = "5" })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group row">
            @Html.LabelFor(model => model.SellerId, "البائع", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SellerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SellerId, "", new { @class = "text-danger" })
            </div>
        </div>*@
       
        <div class="form-group row">
            @Html.LabelFor(model => model.Quantity, " الكمية", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @style = "width:20%", @dir = "ltr" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.PriceUnitId, " وحدة السعر", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PriceUnitId", null, htmlAttributes: new { @class = "form-control" })
                @*@Html.EditorFor(model => model.PriceUnitId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.PriceUnitId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Price, " السعر/جنيه", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @style = "width:20%", @dir = "ltr" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.PriceNote, " ملاحظات على السعر", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceNote, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceNote, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Available, "الاتاحة", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Available)
                    @Html.ValidationMessageFor(model => model.Available, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
      
        @*<div class="form-group row">
            @Html.LabelFor(model => model.CreationDate, " تاريخ التنفيذ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control", placeholder = "", @Id = "CreationDate", @style = "width:20%", @dir = "ltr" } })
                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
            </div>
        </div>*@


        <div class="form-group row">
            @Html.LabelFor(model => model.ExpireDate, "تاريخ الانتهاء", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpireDate, new { htmlAttributes = new { @class = "form-control", placeholder = "", @Id = "ExpireDate", @style = "width:20%", @dir = "ltr" } })
                @Html.ValidationMessageFor(model => model.ExpireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.IsUserAdmin)
        {

            <div class="form-group row">
                @Html.LabelFor(model => model.Publish, "النشر", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Publish)
                        @Html.ValidationMessageFor(model => model.Publish, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.IsFeatured, "سلعة مميزة" , htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                   @* @Html.EditorFor(model => model.IsFeatured)*@
                    @Html.CheckBoxFor(model => model.IsFeatured)
                    @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
            }
        
        <div class="form-group row">
            @Html.LabelFor(model => model.OriginalPrice, "السعر الاصلى", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OriginalPrice, new { htmlAttributes = new { @class = "form-control", @style = "width:20%", @dir = "ltr" } })
                @Html.ValidationMessageFor(model => model.OriginalPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.CommodityImages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="ImagePath" title="Upload a product images"
                       type="file" name="files" onchange="fileCheck(this);" multiple  />

                @Html.ValidationMessageFor(model => model.CommodityImages, "", new { @class = "text-danger" })
            </div>
            </div>*@




            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("عودة للسلع", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
console.log("Hello world!");
    $(document).ready(function () {
        $("#CategoriesList").change(function () {
          
            $.get("getSubCategoryList", { CategoryId: $(CategoriesList).val() }, function (data) {
                $("#SubCategoryId").empty();


                $.each(data, function (index, row) {
                    $("#SubCategoryId").append("<option value='" + row.SubCategoryId + "'>" + row.SubCategory1 + "</option>")
                   //$("#DistrictId").append()("<option value='" + row.DistrictId + "'>" + row.District1+"</option>")
                });
            });

        });
           });

</script>
